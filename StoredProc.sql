USE QL_BANHANG
GO;
CREATE PROCEDURE updateUser @Name nchar(10), @Email char(40), @add nchar(100), @tel char(15), @id char(5)
AS
update USER_INFO set FIRST_NAME = @Name, USERNAME = @Email, TEL = @tel where ID = @id
update USER_ADD set @add = ADDR_LINE1 WHERE USER_ID = @id
GO;

CREATE PROCEDURE updateProduct @PName nchar(40), @Brand char(20), @Size int, @Price money, @Color nchar(10), @Gender Char(6), @Category Char(40),@id char(5)
AS
  IF EXISTS (SELECT ID FROM PRODUCT WHERE ID = @id)
BEGIN
  update PRODUCT set PNAME = @PName, PRICE = @Price, GENDER = @Gender where ID = @id
  update product set product.CATE_ID = (select pc.id from PRODUCT_CATEGORY pc where pc.name = @Category) where product.id = @id
  update PRODUCT_DETAILS set SIZE = @Size, COLOR = @Color where PID = @id
END
ELSE
BEGIN
  INSERT INTO PRODUCT(ID, PNAME, CATE_ID, PRICE, GENDER, BRAND) 
  VALUES((SELECT COUNT(*) FROM PRODUCT)+1, @PName, (SELECT PC.ID FROM PRODUCT_CATEGORY PC WHERE PC.NAME = @Category), @Price, @Gender, @Brand)
  INSERT INTO PRODUCT_DETAILS(ID, PID, COLOR, SIZE)
  VALUES((SELECT COUNT(*) FROM PRODUCT_DETAILS)+1, (SELECT COUNT(*) FROM PRODUCT), @Color, @Size)
END
go;

ALTER PROCEDURE [dbo].[addCart] @SESSION_ID CHAR(5), @PRODUCT_ID CHAR(5), @QUANTITY INT, @TOTAL MONEY
AS
	IF EXISTS (SELECT PRODUCT_ID FROM CART_ITEM WHERE PRODUCT_ID = @PRODUCT_ID AND @SESSION_ID = SESSION_ID) 
BEGIN
   UPDATE CART_ITEM SET QUANTITY = QUANTITY + @QUANTITY, TOTAL = TOTAL + @TOTAL where SESSION_ID=@SESSION_ID and PRODUCT_ID=@PRODUCT_ID
END
ELSE
BEGIN
	IF EXISTS(SELECT TOP 1 ID FROM CART_ITEM ORDER BY ID DESC)
	BEGIN
    INSERT INTO CART_ITEM(ID, PRODUCT_ID, SESSION_ID, QUANTITY, TOTAL) VALUES((SELECT TOP 1 ID FROM CART_ITEM ORDER BY ID DESC)+1, @PRODUCT_ID, @SESSION_ID, @QUANTITY, @TOTAL)
	END
	ELSE
	BEGIN
	INSERT INTO CART_ITEM(ID, PRODUCT_ID, SESSION_ID, QUANTITY, TOTAL) VALUES(1, @PRODUCT_ID, @SESSION_ID, @QUANTITY, @TOTAL)
	END
END 
  UPDATE SHOPPING_SESSION SET TOTAL = (SELECT SUM(TOTAL) FROM CART_ITEM CI WHERE SESSION_ID = @SESSION_ID) WHERE ID = @SESSION_ID
go;

ALTER PROCEDURE [dbo].[deleteCart] @SESSION_ID CHAR(5), @PRODUCT_ID CHAR(5)
AS
delete CART_ITEM where SESSION_ID=@SESSION_ID and PRODUCT_ID=@PRODUCT_ID
UPDATE SHOPPING_SESSION SET TOTAL = (SELECT SUM(TOTAL) FROM CART_ITEM CI WHERE SESSION_ID = @SESSION_ID) WHERE ID = @SESSION_ID
go;

ALTER PROCEDURE [dbo].[deleteAllCart] @SESSION_ID CHAR(5)
AS
delete CART_ITEM where SESSION_ID in (Select CI.SESSION_ID from CART_ITEM CI where CI.SESSION_ID = @SESSION_ID)
UPDATE SHOPPING_SESSION SET TOTAL = 0 WHERE ID = @SESSION_ID
go;


ALTER PROCEDURE [dbo].[updateCart] @SESSION_ID CHAR(5), @PRODUCT_ID CHAR(5), @QUANTITY INT, @TOTAL MONEY
AS
   UPDATE CART_ITEM SET QUANTITY = @QUANTITY, TOTAL = @TOTAL where SESSION_ID=@SESSION_ID and PRODUCT_ID=@PRODUCT_ID
  UPDATE SHOPPING_SESSION SET TOTAL = (SELECT SUM(TOTAL) FROM CART_ITEM CI WHERE SESSION_ID = @SESSION_ID) WHERE ID = @SESSION_ID
go;

CREATE PROCEDURE insertOrder_Details @USER_ID Char(5), @ADD_ID Char(5), @TOTAL Decimal, @CREATED_AT DateTime, @MODIFIED_AT DateTime
AS
  DECLARE @OrderID AS CHAR(5) = (select top 1 ID from ORDER_DETAILS order by ID desc)+1
  insert ORDER_DETAILS(ID, USER_ID, ADD_ID, TOTAL, STATUS, CREATED_AT, MODIFIED_AT) 
  values(@OrderID, @USER_ID, @TOTAL, 'Processed', @CREATED_AT, @MODIFIED_AT)
  return @OrderID
